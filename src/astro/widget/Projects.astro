---
import { css } from "src/styled-system/css";
import Title from "../components/Title.astro";
import { useTranslations, type ProjectKeyPrefix } from "src/i18n/utils";
import { splitWithCommas } from "src/utils/string";

type Props = {};

type ProjectTabList = {
    id: string;
    title: string;
    projects: ProjectInfo[];
};

type ProjectInfo = {
    header: string;
    role: string;
    goal: string;
    period: string;
    content: string;
    result: string;
    urls: string[];
};

const lang = Astro.currentLocale as Lang;
const t = useTranslations(lang);

const projectTabs: ProjectTabList[] = [
    {
        id: "innorules",
        title: t("project.tab.0"),
        projects: [],
    },
    {
        id: "samsung-vd",
        title: t("project.tab.1"),
        projects: [],
    },
    {
        id: "samsung-gtc",
        title: t("project.tab.2"),
        projects: [],
    },
];

const titleCss = css({
    fontWeight: 600,
    opacity: 0.8,
    fontFeatureSettings: "'tnum'",
    letterSpacing: "-0.04em",
});

function getProjectData(key: ProjectKeyPrefix): ProjectInfo {
    return {
        header: t(`project.${key}.header`),
        role: t(`project.${key}.role`),
        goal: t(`project.${key}.goal`),
        period: t(`project.${key}.period`),
        content: t(`project.${key}.content`),
        result: t(`project.${key}.result`),
        urls: splitWithCommas(t(`project.${key}.urls`)),
    };
}
---

<ol id="tab-list-items" class="projects-tab-wrapper">
    {
        projectTabs.map((tab, id) => (
            <li>
                <button
                    class:list={["tab-button", id === 0 && "is-active"]}
                    data-tab-id={tab.id}
                >
                    {tab.title}
                </button>
                <ol class="tab-items">
                    {tab.projects.map((prj) => (
                        <li />
                    ))}
                </ol>
            </li>
        ))
    }
</ol>

<style>
    .projects-tab-wrapper {
        margin: 0.5rem 0;
        display: flex;
        column-gap: 0.5rem;
    }

    .project-year-group {
        margin: 0.5rem 0;
    }

    .tab-button {
        position: relative;
        transition: all 0.25s ease-in-out;
        opacity: 0.5;
        cursor: pointer;
        padding: 0 0.5rem;
        border-radius: 4px;

        &::before {
            transition: all 0.25s ease-in-out;
            content: "";
            position: absolute;
            width: 0;
            height: 2px;
            bottom: 0;
            left: 50%;
            background-color: var(--colors-text);
        }

        .tab-items {
            display: none;
        }

        &:hover {
            opacity: 0.8;
        }

        &.is-active {
            opacity: 1;

            &::before {
                width: calc(100% - 0.5rem);
                left: 0.25rem;
            }

            .tab-items {
                display: block;
            }
        }

        &:first-child {
            margin-left: -0.5rem;
        }
    }

    .project-item {
        padding: 0.25rem 0.5rem;
        margin: 0.5rem 0;
        background-color: var(--colors-background);
        border-radius: 8px;
    }
</style>

<script>
    document
        .getElementById("tab-list-items")
        ?.addEventListener("click", (ev) => {
            const target = ev.target as HTMLElement;
            const button = target.closest(".tab-button");

            if (!button) return;

            document
                .querySelectorAll(".tab-button.is-active")
                .forEach((btn) => btn.classList.remove("is-active"));

            button.classList.add("is-active");
        });
</script>
