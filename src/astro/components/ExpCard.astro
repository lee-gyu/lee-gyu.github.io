---
import {
    useTranslations,
    type ExpKeyPrefix,
    type ExpProps,
} from "src/i18n/utils";
import Title from "src/astro/components/Title.astro";
import { splitWithCommas } from "src/utils/string";
import { listItemsCss } from "src/styles/component-css";

type Props = {
    expId: ExpKeyPrefix;
};

const lang = Astro.currentLocale as Lang;
const t = useTranslations(lang);
const { expId } = Astro.props;

const expData: Partial<Record<ExpProps, string>> = {
    header: t(`exp.${expId}.header`),
    period: t(`exp.${expId}.period`),
    role: t(`exp.${expId}.role`),
    result: t(`exp.${expId}.result`),
    story: t(`exp.${expId}.story`),
    urls: t(`exp.${expId}.urls`),
    urlText: t(`exp.${expId}.urlText`),
};

const urls = splitWithCommas(expData.urls ?? "");
const urlText = splitWithCommas(expData.urlText ?? "");

const headerLines = ["period", "role", "result"] as const;
---

<li class="exp-card">
    <Title size="h4">{expData.header}</Title>
    <ul class={listItemsCss}>
        {
            headerLines
                .filter((prop) => expData[prop])
                .map((prop) => (
                    <li>
                        <span class="exp-label">{t(`exp.label.${prop}`)}</span>
                        <span class="exp-desc">{expData[prop]}</span>
                    </li>
                ))
        }
        {
            expData.urls && urls.length > 0 && (
                <li>
                    <span class="exp-label">{t(`exp.label.urls`)}</span>
                    <div class="url-list">
                        {urls.map((url, id) => (
                            <a
                                href={url}
                                target="_blank"
                                rel="noopener noreferrer"
                            >
                                {urlText[id]}
                            </a>
                        ))}
                    </div>
                </li>
            )
        }
    </ul>
    {
        expData.story && (
            <label class="exp-details">
                <p class="exp-story">{expData.story}</p>
            </label>
        )
    }
</li>

<style>
    .exp-card {
        transition: all 0.15s ease-in-out;
        border-bottom: 2px solid var(--colors-background);
        padding: 1rem var(--spacing-doc-pad-right) 1rem
            var(--spacing-doc-pad-left);
    }

    .exp-label::after {
        content: ":";
        margin-left: 0.25rem;
    }

    .exp-details {
        display: flex;
        margin: 0.25rem -0.5rem 0 -1rem;
        padding: 0.5rem 1rem;
        background-color: var(--colors-accent-o10);
        border-radius: 4px;
    }

    .exp-story {
        white-space: pre-wrap;
        word-break: keep-all;
        overflow: hidden;
    }

    .url-list {
        display: inline-flex;
        column-gap: 0.5rem;
        flex-wrap: wrap;

        a {
            transition: all 0.15s ease-in-out;
            text-decoration: underline;
            text-overflow: ellipsis;
            overflow: hidden;
            white-space: nowrap;

            &:hover {
                transform: translateY(-2px);
            }
        }
    }

    @media print {
        .exp-card {
            background: none !important;
            padding-top: 0.25rem;
            padding-bottom: 0.25rem;
            border-bottom: none;
        }

        .exp-story {
            display: none !important;
        }

        .exp-details {
            padding: 0;
            margin: 0;
        }
    }
</style>
