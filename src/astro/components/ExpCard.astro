---
import { useTranslations } from "src/i18n/utils";
import { experiencesKo, type ExpKey } from "src/i18n/exp-string";
import Title from "src/astro/components/Title.astro";
import { listItemsCss } from "src/styles/component-css";
import ListItems from "./ListItems.astro";
import UrlListItems from "./UrlListItems.astro";
import ImgList from "./ImgList.astro";
import Keywords from "./Keywords.astro";
import { splitCommas } from "src/utils/string";
import Team from "./Team.astro";

type Props = {
    expId: ExpKey;
    printHidden?: boolean;
};

const lang = Astro.currentLocale as Lang;
const t = useTranslations(lang);
const { expId, printHidden } = Astro.props;

const expData = experiencesKo[expId];

const date = expData.year ?? expData.date ?? expData.period ?? "";
const techKeywords = expData.tech ? splitCommas(expData.tech) : [];
const teamMembers = expData.team ? splitCommas(expData.team) : [];
---

<article class="exp-card" data-print-hidden={printHidden ? true : null}>
    <div class="page-no-break">
        {date && <span class="exp-card-date">{date}</span>}
        <Title size="h4">{expData.header}</Title>
    </div>
    {techKeywords.length > 0 && <Keywords keywords={techKeywords} />}
    <ul class={listItemsCss}>
        <ListItems
            label={t(`exp.label.background`)}
            contents={expData.background}
        />
        <Team team={teamMembers} />
        <ListItems label={t(`exp.label.result`)} contents={expData.result} />
        <ListItems label={t(`exp.label.tasks`)} contents={expData.tasks} />
        <ListItems label={t(`exp.label.feat`)} contents={expData.feat} />
        <ListItems label={t(`exp.label.issue`)} contents={expData.issue} />
        <UrlListItems
            label={t("exp.label.urls")}
            urls={expData.urls}
            urlText={expData.urlText}
        />
        {
            expData.imgUrls && expData.imgLabel && (
                <li class="img-area">
                    <span>참고 자료:</span>
                    <ImgList
                        imgUrls={expData.imgUrls}
                        imgLabel={expData.imgLabel}
                    />
                </li>
            )
        }
    </ul>
</article>

<style>
    .exp-card {
        padding: 1rem var(--spacing-doc-pad-right) 1rem
            var(--spacing-doc-pad-left);
        background-color: var(--colors-background-light);
    }

    .exp-details {
        display: flex;
        margin-top: 0.5rem;
    }

    .exp-story {
        white-space: pre-wrap;
        word-break: keep-all;
        overflow: hidden;
        color: var(--colors-text-light);
        line-height: 1.33;
    }

    .exp-card-date {
        font-weight: 500;
        font-size: 0.875rem;
    }

    .exp-details {
        display: none;
    }

    .img-area {
        page-break-inside: avoid;
    }

    @media print {
        .exp-card {
            background: none !important;
            padding-top: 0.1rem;
            padding-bottom: 0.1rem;
            border-bottom: none;
        }

        .exp-card:not(:first-child) {
            margin-top: 0.75rem;
        }

        .exp-details {
            padding: 0;
            margin: 0;
        }
    }
</style>
